{"remainingRequest":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/thread-loader/dist/cjs.js??ref--2-1!/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/ts-loader/index.js??ref--2-2!/home/fupeng/Workspace/wechat/quickstart-miniprogram/src/store/actions/account.ts","dependencies":[{"path":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/src/store/actions/account.ts","mtime":1539855358467},{"path":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/cache-loader/dist/cjs.js","mtime":1537176859979},{"path":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/thread-loader/dist/cjs.js","mtime":1537176860533},{"path":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/ts-loader/index.js","mtime":1535545777399}],"contextDependencies":[],"result":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar wxApi_1 = require(\"../../utils/wxApi\");\nvar account_1 = require(\"../../services/account\");\nvar accountService = new account_1.AccountService();\nexports.default = {\n    login: function (state) {\n        return __awaiter(this, void 0, Promise, function () {\n            var self, error_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        self = getApp() || this;\n                        if (!(self.requestLock.count === 1)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, self.requestLock.request];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        self.requestLock.status = true;\n                        self.requestLock.count++;\n                        self.requestLock.request = new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n                            var res, _a, pin_appid, corp_id, data, error_2;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        _b.trys.push([0, 3, 4, 5]);\n                                        return [4 /*yield*/, wx.Promise.login()];\n                                    case 1:\n                                        res = _b.sent();\n                                        _a = wx.getExtConfigSync(), pin_appid = _a.pin_appid, corp_id = _a.corp_id;\n                                        return [4 /*yield*/, accountService.Login({\n                                                code: res.code\n                                            })];\n                                    case 2:\n                                        data = (_b.sent()).data;\n                                        self.commit('setToken', data);\n                                        resolve(data);\n                                        return [3 /*break*/, 5];\n                                    case 3:\n                                        error_2 = _b.sent();\n                                        wxApi_1.showToast({\n                                            title: '登陆失败，请稍后再试！'\n                                        });\n                                        reject(error_2);\n                                        return [3 /*break*/, 5];\n                                    case 4:\n                                        self.requestLock.status = false;\n                                        self.requestLock.request = null;\n                                        self.requestLock.count = 0;\n                                        return [7 /*endfinally*/];\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, self.requestLock.request];\n                    case 4: return [2 /*return*/, _a.sent()];\n                    case 5:\n                        error_1 = _a.sent();\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    },\n    reportFormId: function (state, fromId) {\n        if (fromId === void 0) { fromId = ''; }\n        return __awaiter(this, void 0, void 0, function () {\n            var self;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.info('fromId', fromId);\n                        if (fromId && fromId === 'the formId is a mock one') {\n                            return [2 /*return*/];\n                        }\n                        self = getApp() || this;\n                        if (!!state.profile.account) return [3 /*break*/, 2];\n                        return [4 /*yield*/, self.dispatch('login')];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    }\n};\n",{"version":3,"file":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/src/store/actions/account.ts","sourceRoot":"","sources":["/home/fupeng/Workspace/wechat/quickstart-miniprogram/src/store/actions/account.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,2CAA8C;AAE9C,kDAAwD;AAExD,IAAM,cAAc,GAAQ,IAAI,wBAAc,EAAE,CAAC;AAEjD,kBAAe;IACP,KAAK,EAAX,UAAY,KAAU;uCAAG,OAAO;;;;;;wBACxB,IAAI,GAAG,MAAM,EAAE,IAAI,IAAI,CAAC;6BAE1B,CAAA,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,CAAC,CAAA,EAA5B,wBAA4B;wBACvB,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAA;4BAArC,sBAAO,SAA8B,EAAC;;wBAGxC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;wBAC/B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;wBACzB,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,UAAO,OAAO,EAAE,MAAM;;;;;;wCAE7C,qBAAM,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAA;;wCAA9B,GAAG,GAAG,SAAwB;wCAE9B,KAAyB,EAAE,CAAC,gBAAgB,EAAE,EAA5C,SAAS,eAAA,EAAE,OAAO,aAAA,CAA2B;wCAEpC,qBAAM,cAAc,CAAC,KAAK,CAAC;gDAC1C,IAAI,EAAE,GAAG,CAAC,IAAI;6CACf,CAAC,EAAA;;wCAFM,IAAI,GAAK,CAAA,SAEf,CAAA,KAFU;wCAIZ,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;wCAC9B,OAAO,CAAC,IAAI,CAAC,CAAC;;;;wCAEd,iBAAS,CAAC;4CACR,KAAK,EAAE,aAAa;yCACrB,CAAC,CAAC;wCACH,MAAM,CAAC,OAAK,CAAC,CAAC;;;wCAEd,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;wCAChC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC;wCAChC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;;;;;6BAE9B,CAAC,CAAC;;;;wBAGM,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAA;4BAArC,sBAAO,SAA8B,EAAC;;;;;;;;KAEzC;IAEK,YAAY,YAAC,KAAU,EAAE,MAAmB;QAAnB,uBAAA,EAAA,WAAmB;;;;;;wBAChD,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;wBAC/B,IAAI,MAAM,IAAI,MAAM,KAAK,0BAA0B,EAAE;4BACnD,sBAAO;yBACR;wBACK,IAAI,GAAG,MAAM,EAAE,IAAI,IAAI,CAAC;6BAC1B,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAtB,wBAAsB;wBACxB,qBAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAA;;wBAA5B,SAA4B,CAAC;;;;;;KAahC;CACF,CAAC","sourcesContent":["\nimport { showToast } from '../../utils/wxApi';\n\nimport { AccountService } from '../../services/account';\n\nconst accountService: any = new AccountService();\n\nexport default {\n  async login(state: any): Promise<any> {\n    const self = getApp() || this;\n\n    if (self.requestLock.count === 1) {\n      return await self.requestLock.request;\n    }\n\n    self.requestLock.status = true;\n    self.requestLock.count++;\n    self.requestLock.request = new Promise(async (resolve, reject) => {\n      try {\n        const res = await wx.Promise.login();\n\n        const { pin_appid, corp_id } = wx.getExtConfigSync();\n\n        const { data } = await accountService.Login({\n          code: res.code\n        });\n\n        self.commit('setToken', data);\n        resolve(data);\n      } catch (error) {\n        showToast({\n          title: '登陆失败，请稍后再试！'\n        });\n        reject(error);\n      } finally {\n        self.requestLock.status = false;\n        self.requestLock.request = null;\n        self.requestLock.count = 0;\n      }\n    });\n\n    try {\n      return await self.requestLock.request;\n    } catch (error) { }\n  },\n\n  async reportFormId(state: any, fromId: string = '') {\n    console.info('fromId', fromId);\n    if (fromId && fromId === 'the formId is a mock one') {\n      return;\n    }\n    const self = getApp() || this;\n    if (!state.profile.account) {\n      await self.dispatch('login');\n    }\n    // const account: any = self.getter('getAccount');\n    // wechatService.AddWxaFormId({\n    //     form_id: {\n    //         app_id: Conf.APP.config.APP_ID,\n    //         openid: account.wechat_id,\n    //         account_id: account.account_id,\n    //         form_id: fromId\n    //     }\n    // }).then((result: any) => {\n    // }).catch((err: any) => {\n    // });\n  }\n};\n"]}]}