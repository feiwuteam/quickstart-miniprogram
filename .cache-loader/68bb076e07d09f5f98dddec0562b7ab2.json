{"remainingRequest":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/thread-loader/dist/cjs.js??ref--2-1!/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/ts-loader/index.js??ref--2-2!/home/fupeng/Workspace/wechat/quickstart-miniprogram/src/store/actions/config.ts","dependencies":[{"path":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/src/store/actions/config.ts","mtime":1539848622715},{"path":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/cache-loader/dist/cjs.js","mtime":1537176859979},{"path":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/thread-loader/dist/cjs.js","mtime":1537176860533},{"path":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/node_modules/ts-loader/index.js","mtime":1535545777399}],"contextDependencies":[],"result":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    detectNetwork: function (state) {\n        return __awaiter(this, void 0, void 0, function () {\n            var self, _a, _b, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        self = getApp() || this;\n                        _b = (_a = self).commit;\n                        _c = ['networkStatus'];\n                        return [4 /*yield*/, wx.Promise.getNetworkType()];\n                    case 1:\n                        _b.apply(_a, _c.concat([_d.sent()]));\n                        wx.onNetworkStatusChange(function (res) {\n                            self.commit('networkStatus', res);\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }\n};\n",{"version":3,"file":"/home/fupeng/Workspace/wechat/quickstart-miniprogram/src/store/actions/config.ts","sourceRoot":"","sources":["/home/fupeng/Workspace/wechat/quickstart-miniprogram/src/store/actions/config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,kBAAe;IACL,aAAa,YAAC,KAAU;;;;;;wBACpB,IAAI,GAAG,MAAM,EAAE,IAAI,IAAI,CAAC;wBAE9B,KAAA,CAAA,KAAA,IAAI,CAAA,CAAC,MAAM,CAAA;8BAAC,eAAe;wBAAE,qBAAM,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAA;;wBAA9D,wBAA6B,SAAiC,GAAC,CAAC;wBAEhE,EAAE,CAAC,qBAAqB,CAAC,UAAC,GAAQ;4BAC9B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;wBACtC,CAAC,CAAC,CAAC;wBACH,sBAAO;;;;KACV;CACJ,CAAC","sourcesContent":["\nexport default {\n    async detectNetwork(state: any) {\n        const self = getApp() || this;\n\n        self.commit('networkStatus', await wx.Promise.getNetworkType());\n\n        wx.onNetworkStatusChange((res: any) => {\n            self.commit('networkStatus', res);\n        });\n        return;\n    }\n};\n"]}]}